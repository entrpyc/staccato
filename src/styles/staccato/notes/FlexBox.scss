@use "../utility/functions" as *;
@use "../config/flex-basis" as *;
@use "../config/main" as *;

@mixin mount($selector) {
  @include flex-box(#{$selector});
  
  @if $selector == '' {
    @include liquid-layout;
    @include flex-basis;
  }
}

@mixin flex-box($selector) {
  @if $selector == '' {
    .flex {
      display: flex;
    }
  }
  
  .flex {
    &.inline#{$selector} {
      display: inline-flex;
    }
    &.wrap#{$selector} {
      flex-wrap: wrap;
    }
    &.row#{$selector} {
      flex-direction: row;
    }
    &.row-reverse#{$selector} {
      flex-direction: row-reverse;
    }
    &.column#{$selector} {
      flex-direction: column;
    }
    &.column-reverse#{$selector} {
      flex-direction: column-reverse;
    }
    &.ai-center#{$selector} {
      align-items: center;
    }
    &.ai-start#{$selector} {
      align-items: flex-start;
    }
    &.ai-end#{$selector} {
      align-items: flex-end;
    }
    &.ai-stretch#{$selector} {
      align-items: stretch;
    }
    &.jc-center#{$selector} {
      justify-content: center;
    }
    &.jc-sb#{$selector} {
      justify-content: space-between;
    }
    &.jc-start#{$selector} {
      justify-content: flex-start;
    }
    &.jc-end#{$selector} {
      justify-content: flex-end;
    }
    &.jc-stretch#{$selector} {
      justify-content: stretch;
    }
    &.center#{$selector} {
      align-items: center;
      justify-content: center;
    }
    &.split#{$selector} {
      align-items: center;
      justify-content: space-between;
    }
  }
  .fill#{$selector} {
    flex: 1;
  }
  .no-shrink#{$selector} {
    flex-shrink: 0;
  }
}

@mixin flex-basis {
  @each $selector, $basis-value in $flex-basis {
    .basis-#{$selector} {
      flex-basis: $basis-value;
    }
  }
}

@mixin liquid-layout {
  .liquid {
    display: flex;
    align-content: flex-start;
    margin: $margin-gap-small * -1;

    &.-layout {
      & > *:first-child {
        flex: 0 1 $sidebar-width + ($margin-gap-small * 2); 
      }
      & > * + * {
        flex: 1 0 auto;
      }
      & > * {
        margin: $margin-gap-small;

        padding: 10px;
        border-radius: 20px;
        background-color: rgba(255, 0, 150, 0.03);
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);
      }
    }

    &.-listing {
      &.fixate {
        --block-count: 3;

        @media (max-width: #{$screen-tablet}) {
          --block-count: 2;
        }

        @media (max-width: #{$screen-mobile}) {
          --block-count: 1;
        }

        flex-wrap: wrap;

        & > * {
          flex-shrink: 0;
          flex-basis: clamp(200px, calc((100% / var(--block-count)) - calc(#{$margin-gap-small} * 2)), 100%);
          height: 200px;
          padding: 10px;
          border-radius: 20px;
          background-color: rgba(255, 0, 150, 0.03);
          box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);
          margin: $margin-gap-small;
        }
      }
      &.fluid {
        --block-width: 200px;
        flex-wrap: wrap;

        & > * {
          flex: 1 0 var(--block-width);
          height: 200px;
          padding: 10px;
          border-radius: 20px;
          background-color: rgba(255, 0, 150, 0.03);
          box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);
          margin: $margin-gap-small;
        }
      }
    }
  }
}

$staccato_object: (
  compatible: (
    'extender',
  ),
)