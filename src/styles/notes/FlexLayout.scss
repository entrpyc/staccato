@use "../config/main";
@use "../config/flex-layout" as *;

@mixin mount($selector) {
  @if $selector == '' {
    @include flex-layouts;
  }
}

@mixin flex-layouts {
  .layout {
    // fixed block count configuration
    --block-count: 4;
    @media (max-width: #{main.$screen-tablet}) {
    --block-count: 2; }
    @media (max-width: #{main.$screen-mobile}) {
    --block-count: 1;}
  }

  .layout {
    .layout-wrap {
      display: flex;
      align-items: stretch;
      justify-content: flex-start;

      width: calc(100% + (#{$column-margin} * 2));
      height: calc(100% + (#{$column-margin} * 2));
      margin: $column-margin * -1;
    }

    @include sidebar {
      border-radius: 20px;
      background-color: rgba(255, 0, 150, 0.03);
      box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);
    }

    @include listing {
      border-radius: 20px;
      background-color: rgba(255, 0, 150, 0.03);
      box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);
    }
  }
}

@mixin sidebar {
  &.-sidebar {
    .column.sidebar {
      flex: 0 1 $sidebar-width; 
    }
    .column {
      flex: 1 0 auto;
      margin: $column-margin;
      padding: $column-padding;

      @content;
    }
  }
}

@mixin listing {
  &.-listing {
    .layout-wrap {
      display: flex;
      flex-wrap: wrap;

      width: calc(100% + (#{$block-margin} * 2));
      height: calc(100% + (#{$block-margin} * 2));
      margin: $block-margin * -1;
    }
    &.fixate {
      .block {
        flex-shrink: 0;
        flex-basis: clamp(#{$block-width}, calc((100% / var(--block-count)) - calc(#{$block-margin} * 2)), 100%);
        min-height: $block-height;
        margin: $block-margin;

        @content;
      }
    }
    &.fluid {
      flex-wrap: wrap;

      .block {
        flex: 1 0 $block-width;
        min-height: $block-height;
        padding: $block-padding;
        margin: $block-margin;

        @content;
      }
    }
  }
}